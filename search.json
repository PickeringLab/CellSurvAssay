[{"path":"https://arunangshu-github.github.io/CellSurvAssay/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed. version GNU Lesser General Public License incorporates terms conditions version 3 GNU General Public License, supplemented additional permissions listed .","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/LICENSE.html","id":"0-additional-definitions","dir":"","previous_headings":"","what":"0. Additional Definitions","title":"GNU Lesser General Public License","text":"used herein, “License” refers version 3 GNU Lesser General Public License, “GNU GPL” refers version 3 GNU General Public License. “Library” refers covered work governed License, Application Combined Work defined . “Application” work makes use interface provided Library, otherwise based Library. Defining subclass class defined Library deemed mode using interface provided Library. “Combined Work” work produced combining linking Application Library. particular version Library Combined Work made also called “Linked Version”. “Minimal Corresponding Source” Combined Work means Corresponding Source Combined Work, excluding source code portions Combined Work , considered isolation, based Application, Linked Version. “Corresponding Application Code” Combined Work means object code /source code Application, including data utility programs needed reproducing Combined Work Application, excluding System Libraries Combined Work.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/LICENSE.html","id":"1-exception-to-section-3-of-the-gnu-gpl","dir":"","previous_headings":"","what":"1. Exception to Section 3 of the GNU GPL","title":"GNU Lesser General Public License","text":"may convey covered work sections 3 4 License without bound section 3 GNU GPL.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/LICENSE.html","id":"2-conveying-modified-versions","dir":"","previous_headings":"","what":"2. Conveying Modified Versions","title":"GNU Lesser General Public License","text":"modify copy Library, , modifications, facility refers function data supplied Application uses facility (argument passed facility invoked), may convey copy modified version: ) License, provided make good faith effort ensure , event Application supply function data, facility still operates, performs whatever part purpose remains meaningful, b) GNU GPL, none additional permissions License applicable copy.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/LICENSE.html","id":"3-object-code-incorporating-material-from-library-header-files","dir":"","previous_headings":"","what":"3. Object Code Incorporating Material from Library Header Files","title":"GNU Lesser General Public License","text":"object code form Application may incorporate material header file part Library. may convey object code terms choice, provided , incorporated material limited numerical parameters, data structure layouts accessors, small macros, inline functions templates (ten fewer lines length), following: ) Give prominent notice copy object code Library used Library use covered License. b) Accompany object code copy GNU GPL license document.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/LICENSE.html","id":"4-combined-works","dir":"","previous_headings":"","what":"4. Combined Works","title":"GNU Lesser General Public License","text":"may convey Combined Work terms choice , taken together, effectively restrict modification portions Library contained Combined Work reverse engineering debugging modifications, also following: ) Give prominent notice copy Combined Work Library used Library use covered License. b) Accompany Combined Work copy GNU GPL license document. c) Combined Work displays copyright notices execution, include copyright notice Library among notices, well reference directing user copies GNU GPL license document. d) one following: 0) Convey Minimal Corresponding Source terms License, Corresponding Application Code form suitable , terms permit, user recombine relink Application modified version Linked Version produce modified Combined Work, manner specified section 6 GNU GPL conveying Corresponding Source. 1) Use suitable shared library mechanism linking Library. suitable mechanism one () uses run time copy Library already present user’s computer system, (b) operate properly modified version Library interface-compatible Linked Version. e) Provide Installation Information, otherwise required provide information section 6 GNU GPL, extent information necessary install execute modified version Combined Work produced recombining relinking Application modified version Linked Version. (use option 4d0, Installation Information must accompany Minimal Corresponding Source Corresponding Application Code. use option 4d1, must provide Installation Information manner specified section 6 GNU GPL conveying Corresponding Source.)","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/LICENSE.html","id":"5-combined-libraries","dir":"","previous_headings":"","what":"5. Combined Libraries","title":"GNU Lesser General Public License","text":"may place library facilities work based Library side side single library together library facilities Applications covered License, convey combined library terms choice, following: ) Accompany combined library copy work based Library, uncombined library facilities, conveyed terms License. b) Give prominent notice combined library part work based Library, explaining find accompanying uncombined form work.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/LICENSE.html","id":"6-revised-versions-of-the-gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"6. Revised Versions of the GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Free Software Foundation may publish revised /new versions GNU Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library received specifies certain numbered version GNU Lesser General Public License “later version” applies , option following terms conditions either published version later version published Free Software Foundation. Library received specify version number GNU Lesser General Public License, may choose version GNU Lesser General Public License ever published Free Software Foundation. Library received specifies proxy can decide whether future versions GNU Lesser General Public License shall apply, proxy’s public statement acceptance version permanent authorization choose version Library.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"cellsurvassay","dir":"Articles","previous_headings":"","what":"CellSurvAssay","title":"CellSurvAssay","text":"CellSurvAssay consists couple tools can used perform Clonogenic Survival Analysis R easily efficiently. two tools : CellSurvAssay R package: helps even beginner R users perform analysis R, maintaining flexibility package. CellSurvAssay Shiny app: web application helps users experience R perform analysis, R. app based CellSurvAssay R package can accessed . document vignette accompanies R package, describes comprehensively package works can used perform analysis. details Shiny app, please access refer Help pages. details tools methodologies, please refer (cite paper).","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"purpose-of-the-cellsurvassay-r-package","dir":"Articles","previous_headings":"","what":"Purpose of the CellSurvAssay R package","title":"CellSurvAssay","text":"makes performing Clonogenic Survival Analysis R incredibly user-friendly efficient, even beginner R users don’t luxury time dig deeper R, arranges commonly used steps clonogenic assay analysis one location automates data wrangling steps extent single lines code suffice step analysis, utilizes ggplot() plot cell survival curves, builds better quality figures available R packages, less time consuming convenient user, accepts raw data analysis calculates plating efficiencies , unlike many automated software commonly used, offers various method options parameter estimation calculating plating efficiencies, unlike available software tools, R utilized, methodology stays open results reproducible.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"installing-the-package","dir":"Articles","previous_headings":"","what":"Installing the package","title":"CellSurvAssay","text":"package shared GitHub. Running following set codes installs loads package R memory: vignette can accessed R using following command:","code":"# if installing from Bioconductor # install BiocManager, if required if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") # install CellSurvAssay BiocManager::install(\"CellSurvAssay\") # load CellSurvAssay in R library(CellSurvAssay)     # if installing from GitHub # install devtools, if required if(!require(devtools)) {     install.packages(\"devtools\")     library(devtools) } # install CellSurvAssay install_github(\"arunangshu-github/CellSurvAssay\",                 build_vignettes = TRUE,                dependencies = TRUE) # load CellSurvAssay in R memory library(CellSurvAssay) browseVignettes(\"CellSurvAssay\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"importing-the-data-set","dir":"Articles","previous_headings":"","what":"Importing the data set","title":"CellSurvAssay","text":"function importData() helps import data set. simple helper function aimed aiding beginner R users, importing functions can used well instead . beginner R users don’t need search functions R packages just import data, one function supports importing multiple file types, including csv, tsv, xlsx, delimited text files, minimum requirements, explained , matched imported dataset, gives error message, helps rectify proceeding downstream analysis. “cline” - cell lines: distinguishes curves data frame “Exp” - replicates: discriminates replicates within curve “dose” - applied radiation dose “ncells” - . cells seeded “ncolonies” - . counted colonies column names imported data match requirements, gives error message. syntax use function. , assign name datatab data, name can used well. Within parentheses function, enter path file type file, within quotes: .xlsx file, need enter type file. file types, entering filetype requirement, shown : file delimited text file, following format can followed: package contains data set can used get familiar package. can imported R environment :","code":"datatab <- importData(\"path/to/file\", \"type of file\") datatab <- importData(\"path/to/file.xlsx\") #for an excel file datatab <- importData(\"path/to/file.csv\", filetype = \"csv\") #for a csv file datatab <- importData(\"path/to/file.tsv\", filetype = \"tsv\") #for a tsv file #for a '|' delimited file datatab <- importData(\"path/to/file\", filetype = \"txt\", separator = \"|\")   #for a tab delimited file datatab <- importData(\"path/to/file\", filetype = \"txt\", separator = \"\\t\") datatab <- CASP8_data"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"additional-arguments","dir":"Articles","previous_headings":"Importing the data set","what":"Additional arguments","title":"CellSurvAssay","text":"Additional arguments can used importData() well, just like read_csv, read_tsv & read_delim functions readr package, read_excel function readxl package. couple examples additional arguments can used import data set using importData(): Please note name different datatab chosen imported data set, name must used downstream analysis. data imported successfully, appear “Global Environment” RStudio (top-right box). view , use following command:","code":"#to skip the first couple of rows datatab <- importData(\"path/to/file.xlsx\", skip = 2)  #to tell R that missing values are denoted by \"-\" in the data being imported datatab <- importData(\"path/to/file.xlsx\", na = \"-\") View(datatab)"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"fitting-the-linear-quadratic-model","dir":"Articles","previous_headings":"","what":"Fitting the Linear Quadratic Model","title":"CellSurvAssay","text":"linear-quadratic model depicts effect radiation insulting agent cell survival. ’s given : \\[ S = S(D)/S(0) = e^{- \\alpha D - \\beta D^2} \\] , cell survival S function dose D insulting agent cells exposed. S(0) plating efficiency, surviving fraction untreated unirradiated cells, S(D) treated cells. \\(\\alpha\\) \\(\\beta\\) parameters describe cell’s radiosensitivity. Typically, S(0) considered fixed kept left side equation. However, CFAssay treats colonies untreated cells random observations, similar colonies treated cells, keeps S(0) right side equation. Moreover, CFAssay formulates equation differently reverses signs, resulting following equation: \\[ S = S(D) = e^{c + \\alpha D + \\beta D^2} \\] \\(c=\\log {S(0)}\\) intercept varies different experiments. CellSurvAssay fits linear quadratic model similar CFAssay. lqmodelFit() function helps fit linear quadratic model cell type present imported data. Within parentheses, first enter name data set given , , within quotes, cell type model fit. output tells us \\(\\alpha\\) \\(\\beta\\) values among statistics. ’s important note due positive formulation model, parameters \\(c\\), \\(\\alpha\\) \\(\\beta\\) generated R negative values. , results, \\(\\alpha\\) \\(\\beta\\) shCASP8-N 0.0161308 0.03678049 respectively.","code":"lqmodelFit(datatab, \"shCASP8-N\") ## ****** Cell type: shCASP8-N ****** ##  ## *** Coefficients of LQ-model for cell survival ***  ## method = ml  ## PEmethod = fit  ##  ## Logarithmic plating efficiencies PE fitted as intercepts  ## see remark in the manual, 1.2  ##      Estimate Std. Error   t value     Pr(>|t|) ## PE1 -1.238340 0.05429647 -22.80702 7.892816e-08 ## PE2 -1.205679 0.05371585 -22.44550 8.815030e-08 ## PE3 -1.297141 0.05537422 -23.42499 6.559791e-08 ##  ## Shape parameters alpha and beta  ##          Estimate  Std. Error    t value    Pr(>|t|) ## alpha -0.01613085 0.038556758 -0.4183664 0.688215852 ## beta  -0.03678049 0.007020955 -5.2386733 0.001200996 ##  ## Observed and fitted plating efficiencies (%):  ##     Experiment   PE PEfitted ## PE1          1 29.6     29.0 ## PE2          2 31.0     29.9 ## PE3          3 26.7     27.3 ##  ## Residual Deviance: 9.996061  ## Total residual sum of weighted squares rsswTot: 10.28712  ## Residual Degrees of Freedom: 7  ## Dispersion parameter: 1.469589  ##  ## Fraction rssw of rsswTot per Experiment  ##   Experiment rssw perCent ## 1          1 1.47    14.3 ## 2          2 1.08    10.5 ## 3          3 7.74    75.3 ##  ## *** Analysis by CellSurvAssay v1.0.0 ***"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"other-method-options","dir":"Articles","previous_headings":"Fitting the Linear Quadratic Model","what":"Other method options","title":"CellSurvAssay","text":"CellSurvAssay, like CFAssay, uses maximum likelihood (ML) method default calculating parameters instead commonly applied least-squares (LS) method LS method necessitates data normally distributed, colony numbers discrete values follow Poisson distribution, making ML method preferable statistically. However, options using standard LS method (method = “ls”) weighted LS method described Franken et al. (method = “franken”) also present comparison. default model fitting method can changed follows: Though method treating data untreated cells random observations statistically preferable kept default package (PEmethod = “fit”), option implementing conventional normalization method (PEmethod = “fix”) present well evaluation. change default plating efficiency method, follow syntax :","code":"lqmodelFit(datatab, \"shCASP8-N\", method = \"ls\") #least squares method lqmodelFit(datatab, \"shCASP8-N\", method = \"franken\") #franken method lqmodelFit(datatab, \"shCASP8-N\", PEmethod = \"fix\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"plotting-cell-survival-curves","dir":"Articles","previous_headings":"","what":"Plotting Cell Survival curves","title":"CellSurvAssay","text":"cell survival curves can plotted using two different functions: plotCSCurve() ggplotCSCurve(). former gives standard curves provided CFAssay package, latter preferred uses widely popular ggplot() function R plot curves, allowing customizations better graphics. also allows easily download figures plotted users’ specifications. functions described .","code":""},{"path":[]},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"individual-curves","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using plotCSCurve()","what":"Individual curves","title":"CellSurvAssay","text":"function plotCSCurve() helps plot individual multiple curves. simplest way plot curve single cell type. Within parentheses, first enter name data set , within quotes, cell type want curve.","code":"plotCSCurve(datatab, \"control-B\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"multiple-curves","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using plotCSCurve()","what":"Multiple curves","title":"CellSurvAssay","text":"function plotCSCurve() help plot multiple curves. Instead entering single cell type, just enter cell types curves required.","code":"plotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"customizing-the-plots","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using plotCSCurve()","what":"Customizing the plots","title":"CellSurvAssay","text":"col = \"name_of_color\" single curve col = c(\"name_of_color_1\", \"name_of_color_2\",...) multiple curves. names colors accepted R can found . Choose favorite ones! xlim ylim can used changed default limits x y axes respectively. E.g. ylim = c(0.1, 1) change start y-axis 0.1 end 1. xlab ylab can used change default labels x y axes respectively. E.g. xlab = \"X axis\" change default label x-axis “X axis”. title = \"Title plot\" give title plot. pch = shape_number pch = \"shape_character can change shape points curve. can either enter integer, character within quotes, mentioned section “pch symbols list”. plot customization:","code":"plotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\",             col = c(\"red\", \"blue\", \"darkgreen\", \"steelblue\"), pch = 4, ylim = c(0.01, 1),             xlab = \"X-axis\", ylab = \"Y-axis\", title = \"Cell Survival Curves\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"other-options","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using plotCSCurve() > Customizing the plots","what":"Other options","title":"CellSurvAssay","text":"default model fitting plating efficiency methods can changed plots well, described “Fitting linear quadratic model” section:","code":"plotCSCurve(datatab, \"control-B\", method = \"franken\", PEmethod = \"fix\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"plotting-using-ggplotcscurve","dir":"Articles","previous_headings":"Plotting Cell Survival curves","what":"Plotting using ggplotCSCurve()","title":"CellSurvAssay","text":"recommended function plotting cell survival curves. Instead regular curves shown , ggplotCSCurve() function plots using ggplot(). plotting default ggplotCSCurve() plots, arguments exactly similar plotCSCurve() function, single multiple curves.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"individual-curves-1","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using ggplotCSCurve()","what":"Individual curves","title":"CellSurvAssay","text":"","code":"ggplotCSCurve(datatab, \"shCASP8-NT\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"multiple-curves-1","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using ggplotCSCurve()","what":"Multiple curves","title":"CellSurvAssay","text":"","code":"ggplotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"customizing-the-plots-1","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using ggplotCSCurve()","what":"Customizing the plots","title":"CellSurvAssay","text":"colors argument lets change default colors curves. must passed similarly col argument plotCSCurve(): colors = \"name_of_color\" single curve colors = c(\"name_of_color_1\", \"name_of_color_2\",...) multiple curves. names colors accepted R can found . Choose favorite ones! Note: number colors chosen equal number cell types passed arguments. colors chosen user, function chooses random might change plotting. Also, sequence colors entered matched sequence cell types. , first color entered assigned first cell type, . title gives title plot. Default \"\". E.g. title = \"Cell Survival Curves\" provides title plot “Cell Survival Curves”. title_size accepts integer changes font size title. E.g. title_size = 12. title_color changes font color title. E.g. title_color = \"red\". title_face changes font face title. Accepted arguments \"plain\"/\"bold\"/\"italic\"/\"bold.italic\". Default \"plain\". E.g. title_face = \"bold.italic\". title_align changes alignment/justification plot title. Accepts \"left, \"center\", \"right\". Default \"center\". subtitle = \"Subtitle\" gives subtitle plot. font size, color, face, alignment can changed sub_size, sub_color, sub_face, sub_align respectively, similar title plot. xlab ylab can used change default labels x y axes respectively. E.g. xlab = \"X axis\" change default label x-axis “X axis”. default label X-axis \"Dose(Gy), Y-axis \"Survivng Fraction\". font size, color, face x-axis label can changed xlab_size, xlab_color, xlab_face respectively, y-axis label can changed ylab_size, ylab_color, ylab_face respectively, similar title plot. default values , X Y axes, 16, \"black\", \"bold\". legend_pos can used control position legend. Default \"inside\", puts legend bottom left figure. \"outside', puts outside right figure, \"none\", removes . legend_title adds title legend; default \"\". E.g. legend_title = \"Cell types\" changes legend title “Cell types”. font size, color, face, alignment legend title can changed ltitle_size, ltitle_color, ltitle_face, ltitle_align respectively, similar plot title. default values 20, \"black\", \"bold\", \"left\" respectively. ltext_size, ltext_color, ltext_face change font size, color, face texts legend respectively. default values 18, \"black\", \"bold\". xtext_size, xtext_color, xtext_face change font size, color, face x-axis tick labels respectively. default values 14, \"black\", \"bold\". ytext_size, ytext_color, ytext_face change font size, color, face y-axis tick labels respectively. default values 14, \"black\", \"bold\". point_shape accepts integer character similarly pch plotCSCurve() change shape points plot. can either enter integer, character within quotes, mentioned section “pch symbols list”. Default 16. point_size accepts integer determines size points plot. Default 3.5. curve_type segment_type accept integers, characters within quotes, determine types line used plot curve vertical line segment respectively. type lines accepted R can found , section “Line types”. default values 1. curve_width segment_width accept numbers determine widths curve vertical line segment respectively. default values 1.5 1 respectively. theme determine theme plot. theme entered following manner: theme = package::theme_name(). good list themes can found . default value ggplot2::theme_bw(). ybreaks accept vector numbers denoting breaks y-axis: ybreaks = c(break1, break2, ...). list breaks ticks appear plot. default values chosen automatically ggplot(). Plots ybreaks ylim easier compare. ylim can used changed default limits x y axes respectively. E.g. ylim = c(0.1, 1) change start y-axis 0.1 end 1. default values chosen automatically ggplot(). Plots ybreaks ylim easier compare. save = \"yes\" saves plot specified path, format, size. Default \"\". save_path can used specify path plot saved. E.g. save_path = \"C:/User1/Desktop\". nothing specified, plot saved current working directory obtained getwd(). save_filename can used specify desired file name extension plot saved. Accepts common extensions, including \".pdf\", \".jpeg\", \".png\". Default \"myplot.pdf. plot_height plot_width used specify size plot saved. units allows specify unit measurements, accepts \"\", \"cm\", \"mm\", \"px\". default height 4, width 5, units \"\". Many customizations used customize figure :  example explaining syntax save plot:","code":"ggplotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\",               colors = c(\"red\", \"blue\", \"darkgreen\", \"steelblue\"),               title = \"Cell Survival Curves\", title_size = 20, title_color = \"darkgreen\",                title_align = \"left\", subtitle = \"CellSurvAssay\", sub_color = \"steelblue\",                sub_align = \"left\", xlab = \"X-axis\", xlab_color = \"red\", xlab_size = 14,                xlab_face = \"bold.italic\", ylab = \"Y-axis\", ylab_color = \"red\", ylab_size = 14,               ylab_face = \"bold.italic\",               xtext_color = \"purple\", ytext_color = \"purple\",                legend_title = \"Cell types\", ltitle_size = 15, legend_back = \"gray\",                legend_border = \"black\", legend_border_width = 0.5, ltitle_align = \"center\",               point_shape = 15, point_size = 1, segment_width = 1, segment_type = 1,               curve_width = 1.1, curve_type = 1,               theme = ggplot2::theme_test()) ggplotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\",               save = \"Yes\", plot_height = 4, plot_width = 5, units = \"in\",               save_path = \"C:/User1/desktop\", save_filename = \"Plot.pdf\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"another-way-of-customizing-the-ggplotcscurve-plots","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using ggplotCSCurve() > Customizing the plots","what":"Another way of customizing the ggplotCSCurve() plots","title":"CellSurvAssay","text":"layered grammar graphics ggplot() allows users add number layers ggplot object. property can used advantage add customization ggplotCSCurve() plot. example, though can use legend_pos = \"none\" remove legend, can following manner:  option helpful want add customization accepted ggplotCSCurve(). Please note layers can added format acceptable ggplot(), ggplot2 package loaded memory using library(ggplot2) .","code":"library(ggplot2) ggplotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\") +   theme(legend.position = \"none\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"other-options-1","dir":"Articles","previous_headings":"Plotting Cell Survival curves > Plotting using ggplotCSCurve() > Customizing the plots","what":"Other options","title":"CellSurvAssay","text":"default model fitting plating efficiency methods can changed plots well, adding arguments within parentheses described sections.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"comparing-two-curves","dir":"Articles","previous_headings":"","what":"Comparing two curves","title":"CellSurvAssay","text":"compareCurves() function helps us statistically compare two curves. prints ANOVA results. null hypothesis parameters \\(\\alpha\\) \\(\\beta\\) models independent two curves, alternate hypothesis parameters different. Within parenthesis, enter name data set, enter names two cell types compared:","code":"compareCurves(datatab, \"shCASP8-N\", \"shCASP8-B+Z+N\") ## ****** Cell type 1: shCASP8-N   ||   Cell type 2: shCASP8-B+Z+N ****** ##  ## Overall comparison test for coefficients alpha and beta of LQ-models  ## ====================================================================  ## method = ml  ## PEmethod = fit  ##  ## 6 PEs fitted as intercepts. To look at, use simple R print function.  ## Null hypothesis (Model 1): one set of shape parameters alpha and beta for all data  ## ----------------------------------------------------------------------------------  ##          Estimate  Std. Error    t value     Pr(>|t|) ## alpha -0.01910478 0.020810067 -0.9180547 3.722228e-01 ## beta  -0.03692732 0.003798381 -9.7218568 4.061270e-08 ##  ## Goodness-of-fit values  ##  Residual Deviance: 12.85619  ##  Total sum of squared weighted residuals rsswTot: 13.19573  ##  Residual Degrees of Freedom: 16  ##  Dispersion parameter: 0.8247333  ##  ## Alternative hypothesis (Model 2): two sets of shape parameters alpha and beta  ## -----------------------------------------------------------------------------  ##                              Estimate  Std. Error    t value     Pr(>|t|) ## alpha:curvesshCASP8-B+Z+N -0.02224331 0.031717703 -0.7012901 4.946148e-01 ## alpha:curvesshCASP8-N     -0.01613085 0.030528750 -0.5283823 6.055094e-01 ## beta:curvesshCASP8-B+Z+N  -0.03710309 0.005804313 -6.3923312 1.675728e-05 ## beta:curvesshCASP8-N      -0.03678049 0.005559103 -6.6162636 1.158171e-05 ##  ## Goodness-of-fit values  ##  Residual Deviance: 12.60644  ##  Total sum of squared weighted residuals rsswTot: 12.89855  ##  Residual Degrees of Freedom: 14  ##  Dispersion parameter: 0.9213253  ##  ## Analysis of Variance Table and F-test ## Model 2 versus Model 1 ##   Resid. Df Resid. Dev Df Deviance      F Pr(>F) ## 1        16     12.856                           ## 2        14     12.606  2  0.24975 0.1355 0.8744 ##  ## *** Analysis by CellSurvAssay v1.0.0 ***"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"other-options-2","dir":"Articles","previous_headings":"Comparing two curves","what":"Other options","title":"CellSurvAssay","text":"default model fitting plating efficiency methods can changed well, adding arguments within parenthesis described sections.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"calculating-dose-enhancement-ratio","dir":"Articles","previous_headings":"","what":"Calculating Dose Enhancement Ratio","title":"CellSurvAssay","text":"clonogenic assay can also determine cell survival fractions combination treatments, additional treatment might influence proliferation rate modify radiation dose-survival curve. Hence, situations, must calculate Dose Enhancement Ratio (DER), also known Sensitizer Enhancement Ratio, Dose Modifying Factor, Dose Modifying Ratio, Radiosenstitivity Enhancement Factor, parameter quantify differences survival curves. function calculateDER() calculates Dose Enhancement Ratio. Within parenthesis, enter name data set followed “control” cell type (numerator ratio), “treatment” cell type (denominator ratio), finally survival fraction DER calculated. , DER shCASP8-NT : shCASP8-N 0.9456221.","code":"calculateDER(datatab, \"shCASP8-NT\", \"shCASP8-N\", 0.25) ## *** Dose Enhancement Ratio *** ##  ## control = shCASP8-NT ## treatment = shCASP8-N ## survival fraction = 0.25 ## method = ml ## PEmethod = fit ## DER = 0.945622065301553 ##  ## *** Analysis by CellSurvAssay v1.0.0 ***"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"other-options-3","dir":"Articles","previous_headings":"Calculating Dose Enhancement Ratio","what":"Other options","title":"CellSurvAssay","text":"default model fitting plating efficiency methods can changed well, adding arguments within parenthesis described sections.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/articles/CellSurvAssay-Vignette.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session Information","title":"CellSurvAssay","text":"","code":"sessionInfo() ## R version 4.2.0 (2022-04-22) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.3.6        CellSurvAssay_0.99.0 ##  ## loaded via a namespace (and not attached): ##  [1] tidyselect_1.1.2    xfun_0.31           bslib_0.3.1         ##  [4] purrr_0.3.4         V8_4.2.0            colorspace_2.0-3    ##  [7] vctrs_0.4.1         generics_0.1.2      CFAssay_1.30.0      ## [10] htmltools_0.5.2     yaml_2.3.5          utf8_1.2.2          ## [13] rlang_1.0.2         pkgdown_2.0.3       jquerylib_0.1.4     ## [16] pillar_1.7.0        glue_1.6.2          withr_2.5.0         ## [19] randomcoloR_1.1.0.1 lifecycle_1.0.1     stringr_1.4.0       ## [22] munsell_0.5.0       gtable_0.3.0        ragg_1.2.2          ## [25] memoise_2.0.1       evaluate_0.15       knitr_1.39          ## [28] fastmap_1.1.0       curl_4.3.2          fansi_1.0.3         ## [31] highr_0.9           Rcpp_1.0.8.3        scales_1.2.0        ## [34] cachem_1.0.6        desc_1.4.1          jsonlite_1.8.0      ## [37] farver_2.1.0        systemfonts_1.0.4   fs_1.5.2            ## [40] textshaping_0.3.6   digest_0.6.29       stringi_1.7.6       ## [43] Rtsne_0.16          dplyr_1.0.9         rprojroot_2.0.3     ## [46] grid_4.2.0          cli_3.3.0           tools_4.2.0         ## [49] magrittr_2.0.3      sass_0.4.1          tibble_3.1.7        ## [52] cluster_2.1.3       crayon_1.5.1        pkgconfig_2.0.3     ## [55] ellipsis_0.3.2      rmarkdown_2.14      R6_2.5.1            ## [58] compiler_4.2.0"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arunangshu Sarkar. Author, maintainer. Curtis Pickering. Author. University Texas MD Anderson Cancer Center. Copyright holder. Frederico Omar Gleber-Netto. Contributor. David Molkentine. Contributor. Heath Skinner. Contributor. Burak Uzunparmak. Contributor. Thomaia Pamplin. Contributor.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sarkar , Pickering C (2022). CellSurvAssay: Clonogenic Survival Analysis R made easy!. https://github.com/arunangshu-github/CellSurvAssay, https://arunangshu-github.github.io/CellSurvAssay/.","code":"@Manual{,   title = {CellSurvAssay: Clonogenic Survival Analysis in R made easy!},   author = {Arunangshu Sarkar and Curtis Pickering},   year = {2022},   note = {https://github.com/arunangshu-github/CellSurvAssay, https://arunangshu-github.github.io/CellSurvAssay/}, }"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"cellsurvassay","dir":"","previous_headings":"","what":"Clonogenic Survival Analysis in R made easy!","title":"Clonogenic Survival Analysis in R made easy!","text":"CellSurvAssay consists couple tools can used perform Clonogenic Survival Analysis R easily efficiently. two tools : CellSurvAssay R package: helps even beginner R users perform analysis R, maintaining flexibility package. CellSurvAssay Shiny app: web application helps users experience R perform analysis, R. app based CellSurvAssay R package can accessed .","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"purpose-of-the-cellsurvassay-r-package","dir":"","previous_headings":"","what":"Purpose of the CellSurvAssay R package","title":"Clonogenic Survival Analysis in R made easy!","text":"makes performing Clonogenic Survival Analysis R incredibly user-friendly efficient, even beginner R users don’t luxury time dig deeper R, arranges commonly used steps clonogenic assay analysis one location automates data wrangling steps extent single lines code suffice step analysis, utilizes ggplot() plot cell survival curves, builds better quality figures available R packages, less time consuming convenient user, accepts raw data analysis calculates plating efficiencies , unlike many automated software commonly used, offers various method options parameter estimation calculating plating efficiencies, unlike available software tools, R utilized, methodology stays open results reproducible. just quick workflow can used perform Clonogenic Survival Analysis using package. details functions, different method options parameter estimation calculation plating efficiency, customization figures, please refer package vignette.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"installing-the-package","dir":"","previous_headings":"","what":"Installing the package","title":"Clonogenic Survival Analysis in R made easy!","text":"package shared GitHub. Running following set codes installs loads package R memory: vignette can accessed R using following command:","code":"# if installing from Bioconductor # install BiocManager, if required if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") # install CellSurvAssay BiocManager::install(\"CellSurvAssay\") # load CellSurvAssay in R library(CellSurvAssay)     # if installing from GitHub # install devtools, if required if(!require(devtools)) {     install.packages(\"devtools\")     library(devtools) } # install CellSurvAssay install_github(\"arunangshu-github/CellSurvAssay\",                 build_vignettes = TRUE,                dependencies = TRUE) # load CellSurvAssay in R memory library(CellSurvAssay) browseVignettes(\"CellSurvAssay\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"importing-the-data-set","dir":"","previous_headings":"","what":"Importing the data set","title":"Clonogenic Survival Analysis in R made easy!","text":"function importData() helps import data set. package contains data set can used get familiar package. can imported R environment :","code":"datatab <- importData(\"path/to/file\", \"type of file\") datatab <- CellSurvAssay::CASP8_data"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"fitting-the-linear-quadratic-model","dir":"","previous_headings":"","what":"Fitting the Linear Quadratic Model","title":"Clonogenic Survival Analysis in R made easy!","text":"lqmodelFit() function helps fit linear quadratic model cell type present imported data.","code":"lqmodelFit(datatab, \"shCASP8-N\") #> *** Coefficients of LQ-model for cell survival ***  #> method = ml  #> PEmethod = fit  #>  #> Logarithmic plating efficiencies PE fitted as intercepts  #> see remark in the manual, 1.2  #>      Estimate Std. Error   t value     Pr(>|t|) #> PE1 -1.238340 0.05429647 -22.80702 7.892816e-08 #> PE2 -1.205679 0.05371585 -22.44550 8.815030e-08 #> PE3 -1.297141 0.05537422 -23.42499 6.559791e-08 #>  #> Shape parameters alpha and beta  #>          Estimate  Std. Error    t value    Pr(>|t|) #> alpha -0.01613085 0.038556758 -0.4183664 0.688215852 #> beta  -0.03678049 0.007020955 -5.2386733 0.001200996 #>  #> Observed and fitted plating efficiencies (%):  #>     Experiment   PE PEfitted #> PE1          1 29.6     29.0 #> PE2          2 31.0     29.9 #> PE3          3 26.7     27.3 #>  #> Residual Deviance: 9.996061  #> Total residual sum of weighted squares rsswTot: 10.28712  #> Residual Degrees of Freedom: 7  #> Dispersion parameter: 1.469589  #>  #> Fraction rssw of rsswTot per Experiment  #>   Experiment rssw perCent #> 1          1 1.47    14.3 #> 2          2 1.08    10.5 #> 3          3 7.74    75.3"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"plotting-cell-survival-curves","dir":"","previous_headings":"","what":"Plotting Cell Survival curves","title":"Clonogenic Survival Analysis in R made easy!","text":"cell survival curves can plotted using two different functions: plotCSCurve() ggplotCSCurve(). former gives standard curves provided CFAssay package, latter preferred uses widely popular ggplot() function R plot curves, allowing customizations better graphics. also allows easily download figures plotted users’ specifications.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"individual-curves","dir":"","previous_headings":"","what":"Individual curves","title":"Clonogenic Survival Analysis in R made easy!","text":"","code":"ggplotCSCurve(datatab, \"shCASP8-NT\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"multiple-curves","dir":"","previous_headings":"","what":"Multiple curves","title":"Clonogenic Survival Analysis in R made easy!","text":"","code":"ggplotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"comparing-two-curves","dir":"","previous_headings":"","what":"Comparing two curves","title":"Clonogenic Survival Analysis in R made easy!","text":"compareCurves() function helps us statistically compare two curves. prints ANOVA results. null hypothesis parameters   models independent two curves, alternate hypothesis parameters different.","code":"compareCurves(datatab, \"shCASP8-N\", \"shCASP8-B+Z+N\") #> Overall comparison test for coefficients alpha and beta of LQ-models  #> ====================================================================  #> method = ml  #> PEmethod = fit  #>  #> 6 PEs fitted as intercepts. To look at, use simple R print function.  #> Null hypothesis (Model 1): one set of shape parameters alpha and beta for all data  #> ----------------------------------------------------------------------------------  #>          Estimate  Std. Error    t value     Pr(>|t|) #> alpha -0.01910478 0.020810067 -0.9180547 3.722228e-01 #> beta  -0.03692732 0.003798381 -9.7218568 4.061270e-08 #>  #> Goodness-of-fit values  #>  Residual Deviance: 12.85619  #>  Total sum of squared weighted residuals rsswTot: 13.19573  #>  Residual Degrees of Freedom: 16  #>  Dispersion parameter: 0.8247333  #>  #> Alternative hypothesis (Model 2): two sets of shape parameters alpha and beta  #> -----------------------------------------------------------------------------  #>                              Estimate  Std. Error    t value     Pr(>|t|) #> alpha:curvesshCASP8-B+Z+N -0.02224331 0.031717703 -0.7012901 4.946148e-01 #> alpha:curvesshCASP8-N     -0.01613085 0.030528750 -0.5283823 6.055094e-01 #> beta:curvesshCASP8-B+Z+N  -0.03710309 0.005804313 -6.3923312 1.675728e-05 #> beta:curvesshCASP8-N      -0.03678049 0.005559103 -6.6162636 1.158171e-05 #>  #> Goodness-of-fit values  #>  Residual Deviance: 12.60644  #>  Total sum of squared weighted residuals rsswTot: 12.89855  #>  Residual Degrees of Freedom: 14  #>  Dispersion parameter: 0.9213253  #>  #> Analysis of Variance Table and F-test #> Model 2 versus Model 1 #>   Resid. Df Resid. Dev Df Deviance      F Pr(>F) #> 1        16     12.856                           #> 2        14     12.606  2  0.24975 0.1355 0.8744"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/index.html","id":"calculating-dose-enhancement-ratio","dir":"","previous_headings":"","what":"Calculating Dose Enhancement Ratio","title":"Clonogenic Survival Analysis in R made easy!","text":"function calculateDER() calculates Dose Enhancement Ratio. , DER shCASP8-NT : shCASP8-N 0.9456221.","code":"calculateDER(datatab, \"shCASP8-NT\", \"shCASP8-N\", 0.25) #> [1] 0.9456221"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/CASP8_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CASP8 data set — CASP8_data","title":"CASP8 data set — CASP8_data","text":"example data set provided R package","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/CASP8_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CASP8 data set — CASP8_data","text":"","code":"CASP8_data"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/CASP8_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CASP8 data set — CASP8_data","text":"data frame 144 rows 5 columns: cline  Exp  dose  ncells  ncolonies","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/CASP8_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CASP8 data set — CASP8_data","text":"","code":"datatab <- CASP8_data"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/CellSurvAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"CellSurvAssay — CellSurvAssay","title":"CellSurvAssay — CellSurvAssay","text":"R package written around CFAssay, another R package can used Clonogenic Survival Analysis analysis R. However, CellSurvAssay ’s purposes advantages:","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/CellSurvAssay.html","id":"purpose","dir":"Reference","previous_headings":"","what":"Purpose","title":"CellSurvAssay — CellSurvAssay","text":"makes performing Clonogenic Survival Analysis R ncredibly user-friendly efficient, even beginner R users luxury time dig deeper R, arranges commonly used steps clonogenic assay analysis one location automates data wrangling steps extent single lines ode suffice step analysis,  * makes performing Clonogenic Survival Analysis R   incredibly user-friendly efficient, even beginner R users   luxury time dig deeper R, * arranges   commonly used steps clonogenic assay analysis one location   automates data wrangling steps extent single lines   code suffice step analysis, * utilizes ggplot()   plot cell survival curves, builds better quality figures   available R packages, * less time consuming convenient   user, accepts raw data analysis calculates   plating efficiencies , unlike many automated software commonly   used, * offers various method options parameter estimation   calculating plating efficiencies, unlike available software   tools, * R utilized, methodology stays open   results reproducible.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/CellSurvAssay.html","id":"functions-in-the-package","dir":"Reference","previous_headings":"","what":"Functions in the package","title":"CellSurvAssay — CellSurvAssay","text":"* [importData()] imports data set R * [lqmodelFit()] fits linear quadratic model * [plotCSCurve()] plots regular cell survival curve * [ggplotCSCurve()] plots cell survival curves using ggplot() * [compareCurves()] statistically compares two cell survival curves * [calculateDER()] calculates Dose Enhancement Ratio","code":""},{"path":[]},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/calculateDER.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Dose Enhancement Ratio — calculateDER","title":"Calculates the Dose Enhancement Ratio — calculateDER","text":"helps calculate Dose Enhancement Ratio automatically without going data wrangling steps calculation.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/calculateDER.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Dose Enhancement Ratio — calculateDER","text":"","code":"calculateDER(data, control, treatment, S, method = \"ml\", PEmethod = \"fit\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/calculateDER.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Dose Enhancement Ratio — calculateDER","text":"data data frame containing least following five columns: \"cline\", \"Exp\", \"dose\", \"ncells\", \"ncolonies\". control Name cell-line/group act control (numerator ratio). treatment Name cell-line/group act treatment (denominator ratio). S survival fraction value want calculate DER. method Method used fit. \"ml\" (maximum likelihood) default. Can \"ls\" (least squares) \"franken\" (weighted least squares described Franken eta al.(2006)). PEmethod Controls value plating efficiencies. \"fit\" calculates fitted plating efficiencies model parameters, \"fix\" uses fixed ones calculated observed zero dose data.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/calculateDER.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Dose Enhancement Ratio — calculateDER","text":"Dose Enhancement Ratio Control:Treatment.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/calculateDER.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the Dose Enhancement Ratio — calculateDER","text":"","code":"datatab <- CASP8_data calculateDER(datatab, \"shCASP8-NT\", \"shCASP8-N\", 0.25) #> *** Dose Enhancement Ratio *** #>  #> control = shCASP8-NT #> treatment = shCASP8-N #> survival fraction = 0.25 #> method = ml #> PEmethod = fit #> DER = 0.945622065301553 #>  #> *** Analysis by CellSurvAssay v1.0.0 *** calculateDER(datatab, \"shCASP8-NT\", \"shCASP8-N\", 0.25, method = \"ls\", PEmethod = \"fix\") #> *** Dose Enhancement Ratio *** #>  #> control = shCASP8-NT #> treatment = shCASP8-N #> survival fraction = 0.25 #> method = ls #> PEmethod = fix #> DER = 0.951520220901901 #>  #> *** Analysis by CellSurvAssay v1.0.0 ***"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/compareCurves.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares two cell survival curves using ANOVA. — compareCurves","title":"Compares two cell survival curves using ANOVA. — compareCurves","text":"helps compare two cell survival curves using cellsurvLQdiff function CFAssay package, without user go data wrangling steps necessary . Visit https://bioconductor.org/packages/release/bioc/html/CFAssay.html details method.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/compareCurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares two cell survival curves using ANOVA. — compareCurves","text":"","code":"compareCurves(data, cline1, cline2, method = \"ml\", PEmethod = \"fit\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/compareCurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares two cell survival curves using ANOVA. — compareCurves","text":"data data frame containing least following five columns: \"cline\", \"Exp\", \"dose\", \"ncells\", \"ncolonies\". cline1 Name cell-line/group want compare. cline2 Name another cell-line/group want compare. method Method used fit. \"ml\" (maximum likelihood) default. Can \"ls\" (least squares) \"franken\" (weighted least squares described Franken eta al.(2006)). PEmethod Controls value plating efficiencies. \"fit\" calculates fitted plating efficiencies model parameters, \"fix\" uses fixed ones calculated observed zero dose data.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/compareCurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares two cell survival curves using ANOVA. — compareCurves","text":"object class cellsurvLQdiff, returned cellsurvLQdiff.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/compareCurves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compares two cell survival curves using ANOVA. — compareCurves","text":"","code":"datatab <- CASP8_data compareCurves(datatab, \"shCASP8-N\", \"shCASP8-B+Z+N\") #> ****** Cell type 1: shCASP8-N   ||   Cell type 2: shCASP8-B+Z+N ****** #>  #> Overall comparison test for coefficients alpha and beta of LQ-models  #> ====================================================================  #> method = ml  #> PEmethod = fit  #>  #> 6 PEs fitted as intercepts. To look at, use simple R print function.  #> Null hypothesis (Model 1): one set of shape parameters alpha and beta for all data  #> ----------------------------------------------------------------------------------  #>          Estimate  Std. Error    t value     Pr(>|t|) #> alpha -0.01910478 0.020810067 -0.9180547 3.722228e-01 #> beta  -0.03692732 0.003798381 -9.7218568 4.061270e-08 #>  #> Goodness-of-fit values  #> \tResidual Deviance: 12.85619  #> \tTotal sum of squared weighted residuals rsswTot: 13.19573  #> \tResidual Degrees of Freedom: 16  #> \tDispersion parameter: 0.8247333  #>  #> Alternative hypothesis (Model 2): two sets of shape parameters alpha and beta  #> -----------------------------------------------------------------------------  #>                              Estimate  Std. Error    t value     Pr(>|t|) #> alpha:curvesshCASP8-B+Z+N -0.02224331 0.031717703 -0.7012901 4.946148e-01 #> alpha:curvesshCASP8-N     -0.01613085 0.030528750 -0.5283823 6.055094e-01 #> beta:curvesshCASP8-B+Z+N  -0.03710309 0.005804313 -6.3923312 1.675728e-05 #> beta:curvesshCASP8-N      -0.03678049 0.005559103 -6.6162636 1.158171e-05 #>  #> Goodness-of-fit values  #> \tResidual Deviance: 12.60644  #> \tTotal sum of squared weighted residuals rsswTot: 12.89855  #> \tResidual Degrees of Freedom: 14  #> \tDispersion parameter: 0.9213253  #>  #> Analysis of Variance Table and F-test #> Model 2 versus Model 1 #>   Resid. Df Resid. Dev Df Deviance      F Pr(>F) #> 1        16     12.856                           #> 2        14     12.606  2  0.24975 0.1355 0.8744 #>  #> *** Analysis by CellSurvAssay v1.0.0 *** compareCurves(datatab, \"shCASP8-N\", \"shCASP8-B+Z+N\", method = \"ls\", PEmethod = \"fix\") #> ****** Cell type 1: shCASP8-N   ||   Cell type 2: shCASP8-B+Z+N ****** #>  #> Overall comparison test for coefficients alpha and beta of LQ-models  #> ====================================================================  #> method = ls  #> PEmethod = fix  #>  #> Null hypothesis (Model 1): one set of shape parameters alpha and beta for all data  #> ----------------------------------------------------------------------------------  #>          Estimate  Std. Error    t value     Pr(>|t|) #> alpha -0.01448839 0.019445780  -0.745066 4.670361e-01 #> beta  -0.03843262 0.003674907 -10.458122 1.467656e-08 #>  #>  #> Goodness-of-fit values  #> \tTotal sum of squared residuals rssTot: 0.1126081  #> \tResidual Degrees of Freedom: 16  #> \tMultiple R-squared: 0.9986025  #>  #> Alternative hypothesis (Model 2): two sets of shape parameters alpha and beta  #> -----------------------------------------------------------------------------  #>                               Estimate Std. Error    t value     Pr(>|t|) #> alpha:curvesshCASP8-B+Z+N -0.020664576 0.02914708 -0.7089759 4.899782e-01 #> alpha:curvesshCASP8-N     -0.008312201 0.02914708 -0.2851812 7.796808e-01 #> beta:curvesshCASP8-B+Z+N  -0.037657377 0.00550828 -6.8365033 8.107448e-06 #> beta:curvesshCASP8-N      -0.039207870 0.00550828 -7.1179873 5.188559e-06 #>  #>  #> Goodness-of-fit values  #> \tTotal sum of squared residuals rssTot: 0.1106845  #> \tResidual Degrees of Freedom: 14  #> \tMultiple R-squared: 0.9986266  #>  #> Analysis of Variance Table and F-test #> Model 2 versus Model 1 #>   Res.Df     RSS Df Sum of Sq      F Pr(>F) #> 1     16 0.11261                            #> 2     14 0.11069  2 0.0019235 0.1216 0.8864 #>  #> *** Analysis by CellSurvAssay v1.0.0 ***"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/ggplotCSCurve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots Cell Survival Curves using ggplot() — ggplotCSCurve","title":"Plots Cell Survival Curves using ggplot() — ggplotCSCurve","text":"function helps plot cell survival curves using ggplot(), recommended way plot curves plotCSCurve. single function plots curves, single multiple cell type(s), allows options necessary customize figures publication.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/ggplotCSCurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots Cell Survival Curves using ggplot() — ggplotCSCurve","text":"","code":"ggplotCSCurve(   data,   ...,   method = \"ml\",   PEmethod = \"fit\",   colors = NULL,   title = \"\",   title_size = 20,   title_color = \"black\",   title_face = \"bold\",   title_align = \"center\",   subtitle = \"\",   sub_size = 15,   sub_color = \"black\",   sub_face = \"italic\",   sub_align = \"center\",   xlab = \"Dose (Gy)\",   xlab_size = 16,   xlab_color = \"black\",   xlab_face = \"bold\",   rem_minor_x = \"yes\",   emph_major_x = \"no\",   major_x_col = \"gray\",   major_x_width = 1,   ylab = \"Surviving Fraction\",   ylab_size = 16,   ylab_color = \"black\",   ylab_face = \"bold\",   rem_minor_y = \"yes\",   emph_major_y = \"no\",   major_y_col = \"gray\",   major_y_width = 1,   legend_title = \"\",   ltitle_size = 20,   ltitle_color = \"black\",   ltitle_face = \"bold\",   ltitle_align = \"left\",   legend_pos = \"inside\",   legend_back = \"\",   legend_border = \"\",   legend_border_width = 0,   ltext_size = 18,   ltext_color = \"black\",   ltext_face = \"bold\",   xtext_size = 14,   xtext_color = \"black\",   xtext_face = \"bold\",   ytext_size = 14,   ytext_color = \"black\",   ytext_face = \"bold\",   point_shape = 16,   point_size = 3.5,   segment_type = 1,   segment_width = 1,   curve_width = 1.5,   curve_type = 1,   theme = ggplot2::theme_bw(),   ylim = NULL,   ybreaks = ggplot2::waiver(),   save = \"no\",   plot_width = 5,   plot_height = 4,   units = \"in\",   save_path = getwd(),   save_filename = \"myplot.pdf\" )"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/ggplotCSCurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots Cell Survival Curves using ggplot() — ggplotCSCurve","text":"data data frame containing least following five columns: \"cline\", \"Exp\", \"dose\", \"ncells\", \"ncolonies\". ... name cell type(s)/group(s). entering multiple cell types, separate comma. method Method used fit. \"ml\" (maximum likelihood) default. Can \"ls\" (least squares) \"franken\" (weighted least squares described Franken eta al.(2006)). PEmethod Controls value plating efficiencies. default method, \"fit\", calculates fitted plating efficiencies model parameters, \"fix\" uses fixed ones calculated observed zero dose data. colors vector strings denoting colors curves. Size vector equal number cell types entered. colors chosen user, function chooses random might change plotting. title string denoting title plot. Default \"\". title_size integer denoting font size title. Default 20. title_color string denoting color font title. Default \"black\". title_face string denoting type font face. Accepts \"bold\", \"italic\", \"bold.italic\". Default \"bold\". title_align string denoting justification (alignment) plot title. Accepts \"center\", \"left\", \"right\". Default \"center\". subtitle string denoting subtitle plot; default \"\". sub_size, sub_color, sub_face, sub_align Used customize font size, color, face, alignment subtitle respectively, like plot title. Default values 15, \"black\", \"italic\", \"center\" respectively. xlab string denoting label X-axis; default \"Dose (Gy)\". xlab_size, xlab_color, xlab_face Used customize font size, color, face, alignment label X-axis respectively, like plot title. Default values 16, \"black\", \"bold\" respectively. rem_minor_x \"\", keeps minor grids X-axis. Default \"yes\". emph_major_x \"yes\", allows emphasize customize major grids X-axis. Default \"\". major_x_col, major_x_width Allows change color width major grids X-axis, emph_major_x = \"yes\". Default values \"gray\" 1 respectively. ylab string denoting label y-axis; default \"Surviving Fraction\". ylab_size, ylab_color, ylab_face Used customize font size, color, face, alignment label Y-axis respectively, like plot title. Default values 16, \"black\", \"bold\" respectively. rem_minor_y \"\", keeps minor grids Y-axis. Default \"yes\". emph_major_y \"yes\", allows emphasize customize major grids Y-axis. Default \"\". major_y_col, major_y_width Allows change color width major grids Y-axis, emph_major_y = \"yes\". Default values \"gray\" 1 respectively. legend_title string denoting title legend; default \"\". ltitle_size, ltitle_color, ltitle_face, ltitle_align Used customize font size, color, face, alignment legend title respectively, like plot title. Default values 20, \"black\", \"bold\", \"left\" respectively. legend_pos string denoting position legend. \"inside\" default, places legend bottom left figure. Also accepts \"outside\" (places legend outside figure right) \"none\" (removes legend). legend_back string denoting color legend background. Default \"\". legend_border string denoting color legnd border. Default \"\". legend_border_width integer denoting width legend border. Default 0. ltext_size, ltext_color, ltext_face change font size, color, face legend texts. Default values 18, \"black\", \"bold\" respectively. xtext_size, xtext_color, xtext_face change font size, color, face x axis ticks.Default values 14, \"black\", \"bold\" respectively. ytext_size, ytext_color, ytext_face change font size, color, face y axis ticks. Default values 14, \"black\", \"bold\" respectively. point_shape integer denoting shape points plot. Default 16. point_size integer denoting size points plot. Default 3.5. segment_type integer denoting type straight line segments plot. Default 1. segment_width integer denoting width straight line segments plot. Default 1. curve_width integer denoting width curved line segments plot. Default 1.5. curve_type integer denoting type curved line segments plot. Default 1. theme name theme used plot. preceded name package form: package::theme(). Default ggplot2::theme_bw(). ylim vector denoting limits y-axis. Defaults chosen automatically ggplot(). ybreaks vector denoting y-axis breaks/ticks. Defaults chosen automatically ggplot(). save save plot. save = \"yes\" saves plot specified path format. plot_width number denoting width plot. Default 5. plot_height number denoting height plot. Default 4. units string denoting units height width plot mentioned. Accepts \"\", \"cm\", \"mm\", \"px\". Default \"\". save_path Path plot saved. Default current working directory obtained getwd(). save_filename File name extension plot. Accepts common extensions, including .pdf, .jpeg, .png.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/ggplotCSCurve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots Cell Survival Curves using ggplot() — ggplotCSCurve","text":"ggplot object.","code":""},{"path":[]},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/ggplotCSCurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots Cell Survival Curves using ggplot() — ggplotCSCurve","text":"","code":"datatab <- CASP8_data  # Single curve  ggplotCSCurve(datatab, \"shCASP8-NT\")   ggplotCSCurve(datatab, \"control-B\", colors = \"black\", xlab = \"X-axis\", ylab = \"Y-axis\", title = \"Single Plot\", point_shape = 1, point_size = 2, segment_width = 1, segment_type = 1, curve_width = 1, curve_type = 1, legend_title = \"Cell types\", ylim = c(0.008, 1.05), ybreaks = c(0.01, 0.05, 0.20, 0.50, 1), theme = ggplot2::theme_classic())   # Multiple Curves  ggplotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\")   ggplotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\", colors = c(\"darkgreen\", \"green\", \"orange\", \"magenta\"), xlab = \"X-axis\", ylab = \"Y-axis\", title = \"Multiple Curves\", point_shape = 15, point_size = 1, segment_width = 1, segment_type = 1, curve_width = 1, curve_type = 1, legend_title = \"Cell types\", theme = ggplot2::theme_dark(), legend_back = \"white\", legend_border = \"white\", legend_border_width = 0.5)   if (FALSE) { # Save a plot ggplotCSCurve(datatab, \"shCASP8-NT\", \"shCASP8-B\", \"shCASP8-B+Z\", \"shCASP8-B+Z+N\", save = \"yes\") }"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/importData.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports the data — importData","title":"Imports the data — importData","text":"helps import data set, whether tsv, csv, txt, excel format.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/importData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports the data — importData","text":"","code":"importData(filepath, filetype = \"excel\", separator = NULL, ...)"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/importData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports the data — importData","text":"filepath Path file imported. filetype type file imported. default, \"excel\", also accepts \"tsv\", \"csv\", \"txt\". separator delimiter data set, \"txt\" file. ... argument can passed read_csv, read_tsv, read_delim, read_excel functions, data set csv, tsv, txt, excel file, respectively.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/importData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports the data — importData","text":"data frame","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/importData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports the data — importData","text":"","code":"if (FALSE) { # If it's an excel file importData(\"path/to/file\")  # If it's a csv file importData(\"path/to/file\", filetype = \"csv\")  # If it's a txt file with each observation separated by a \"|\" importData(\"path/to/file\", filetype = \"txt\", separator = \"|\") }"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/lqmodelFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the Linear Quadratic Model — lqmodelFit","title":"Fits the Linear Quadratic Model — lqmodelFit","text":"helps fit linear quadratic model using cellsurvLQfit function CFAssay package, automates data wrangling steps, thus making convenient use beginner R users. Visit https://bioconductor.org/packages/release/bioc/html/CFAssay.html details method fit.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/lqmodelFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the Linear Quadratic Model — lqmodelFit","text":"","code":"lqmodelFit(data, ctype, method = \"ml\", PEmethod = \"fit\")"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/lqmodelFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the Linear Quadratic Model — lqmodelFit","text":"data data frame containing least following five columns exact names: \"cline\", \"Exp\", \"dose\", \"ncells\", \"ncolonies\". ctype Name cell-line/group model fit. method Method used fit. \"ml\" (maximum likelihood) default. Also accepts \"ls\" (least squares) \"franken\" (weighted least squares described Franken eta al.(2006)). PEmethod Controls value plating efficiencies. \"fit\" calculates fitted plating efficiencies model parameters, \"fix\" uses fixed ones calculated observed zero dose data.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/lqmodelFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the Linear Quadratic Model — lqmodelFit","text":"object class cellsurvLQfit, returned cellsurvLQfit.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/lqmodelFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits the Linear Quadratic Model — lqmodelFit","text":"","code":"datatab <- CASP8_data lqmodelFit(datatab, \"control-B\") #> ****** Cell type: control-B ****** #>  #> *** Coefficients of LQ-model for cell survival ***  #> method = ml  #> PEmethod = fit  #>  #> Logarithmic plating efficiencies PE fitted as intercepts  #> see remark in the manual, 1.2  #>      Estimate Std. Error   t value     Pr(>|t|) #> PE1 -1.241244 0.04588891 -27.04888 2.420266e-08 #> PE2 -1.183913 0.04495808 -26.33371 2.914873e-08 #> PE3 -1.252173 0.04607027 -27.17963 2.340599e-08 #>  #> Shape parameters alpha and beta  #>          Estimate  Std. Error    t value     Pr(>|t|) #> alpha -0.01366794 0.034615893 -0.3948458 7.047115e-01 #> beta  -0.06047490 0.006936648 -8.7181736 5.243901e-05 #>  #> Observed and fitted plating efficiencies (%):  #>     Experiment   PE PEfitted #> PE1          1 29.5     28.9 #> PE2          2 31.0     30.6 #> PE3          3 27.0     28.6 #>  #> Residual Deviance: 6.7948  #> Total residual sum of weighted squares rsswTot: 6.841747  #> Residual Degrees of Freedom: 7  #> Dispersion parameter: 0.9773924  #>  #> Fraction rssw of rsswTot per Experiment  #>   Experiment rssw perCent #> 1          1 0.65     9.5 #> 2          2 0.82    12.0 #> 3          3 5.37    78.5 #>  #> *** Analysis by CellSurvAssay v1.0.0 *** lqmodelFit(datatab, \"control-B\", method = \"ls\", PEmethod = \"fix\") #> ****** Cell type: control-B ****** #>  #> *** Coefficients of LQ-model for cell survival ***  #> method = ls  #> PEmethod = fix  #>  #> Shape parameters alpha and beta  #>          Estimate  Std. Error    t value     Pr(>|t|) #> alpha -0.03085093 0.036336074 -0.8490442 4.239383e-01 #> beta  -0.05626118 0.006866872 -8.1931296 7.824695e-05 #>  #> Total residual sum of squares rssTot: 0.08600878  #> Residual Degrees of Freedom: 7  #> Multiple R-squared: 0.9985152  #>  #> Fraction rss of rssTot per Experiment  #>   Experiment  rss perCent #> 1          1 0.03    31.4 #> 2          2 0.00     5.0 #> 3          3 0.05    63.6 #>  #> *** Analysis by CellSurvAssay v1.0.0 ***"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/plotCSCurve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots Cell Survival Curves — plotCSCurve","title":"Plots Cell Survival Curves — plotCSCurve","text":"one two functions helps plot cell survival curves. plots curves, one cell type multiple cell types, without user go data wrangling steps. plots basic plots returned plot.cellsurvLQfit function. recommended function plotting cell survival curves ggplotCSCurve, though, uses ggplot plot curves, allows lot customization.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/plotCSCurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots Cell Survival Curves — plotCSCurve","text":"","code":"plotCSCurve(   data,   ...,   method = \"ml\",   PEmethod = \"fit\",   col = NULL,   xlim = NULL,   ylim = c(0.008, 1),   xlab = \"Dose (Gy)\",   ylab = \"Survival (1 = 100%)\",   title = NULL,   pch = 1 )"},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/plotCSCurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots Cell Survival Curves — plotCSCurve","text":"data data frame containing least following five columns: \"cline\", \"Exp\", \"dose\", \"ncells\", \"ncolonies\". ... name cell type(s)/group(s). entering multiple cell types, separate comma. method Method used fit. \"ml\" (maximum likelihood) default. Can \"ls\" (least squares) \"franken\" (weighted least squares described Franken eta al.(2006)). PEmethod Controls value plating efficiencies. \"fit\" calculates fitted plating efficiencies model parameters, \"fix\" uses fixed ones calculated observed zero dose. col vector strings denoting colors curves. Size vector equal number cell types entered. xlim vector denoting limits x-axis. ylim vector denoting limits y-axis. xlab string denoting label x-axis. ylab string denoting label y-axis. title string denoting title plot. pch integer denoting shape points plot.","code":""},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/plotCSCurve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots Cell Survival Curves — plotCSCurve","text":"plot object.","code":""},{"path":[]},{"path":"https://arunangshu-github.github.io/CellSurvAssay/reference/plotCSCurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots Cell Survival Curves — plotCSCurve","text":"","code":"datatab <- CASP8_data  # Single curve  plotCSCurve(datatab, \"control-B\")   plotCSCurve(datatab, \"control-NT\", col = \"blue\", pch = 4, ylim = c(0.1, 1), xlab = \"X-axis\", ylab = \"Y-axis\", title = \"Curve of Control-NT\")   # Multiple curves  plotCSCurve(datatab, \"control-B\", \"control-NT\")   plotCSCurve(datatab, \"shCASP8-N\", \"shCASP8-B+Z+N\", \"control-B\", col = c(\"red\", \"blue\", \"purple\"), pch = 4, ylim = c(0.1, 1), xlab = \"X-axis\", ylab = \"Y-axis\", title = \"Multiple Curves\")"}]
